use master
go
if (exists(select * from sysdatabases where name ='QLKHO'))
drop database QLKHO
go
create database QLKHO
on primary (
name='QLKHO_dat', filename='E:\QLKHO.mdf', size=2MB, maxsize=10MB, filegrowth=20%)
log on (name='QLKHO_log', filename='E:\QLKHO.ldf', size=1MB, maxsize=5MB, filegrowth=1MB)
go
use QLKHO
go

CREATE TABLE TON(
	MAVT VARCHAR(10) NOT NULL PRIMARY KEY,
	TENVT NVARCHAR(20) NOT NULL,
	SOLG INT NOT NULL
)

CREATE TABLE NHAP(
	SOHDN VARCHAR(10) NOT NULL PRIMARY KEY,
	MAVT VARCHAR(10) NOT NULL,
	SOLGN INT NOT NULL,
	DONGIAN INT NOT NULL,
	NGAYN DATE,
	CONSTRAINT FK_MAVT FOREIGN KEY(MAVT) REFERENCES TON(MAVT)
)

CREATE TABLE XUAT(
	SOHDX VARCHAR(10) NOT NULL PRIMARY KEY,
	MAVT VARCHAR(10) NOT NULL,
	SOLGX INT NOT NULL,
	DONGIAX INT NOT NULL,
	NGAYX DATE,
	CONSTRAINT FK2_MAVT FOREIGN KEY(MAVT) REFERENCES TON(MAVT)
)

INSERT INTO TON VALUES('A4','GIAY A4',1000)
INSERT INTO TON VALUES('B2','BUT CHI B2',2000)
INSERT INTO TON VALUES('K1','THUOC KE',500)
INSERT INTO TON VALUES('C1','COMPA',1500)
INSERT INTO TON VALUES('T1','TAY',400)

INSERT INTO NHAP VALUES('HH001','A4',500,200,'6/9/2019')
INSERT INTO NHAP VALUES('TL001','K1',500,1200,'4/29/2019')
INSERT INTO NHAP VALUES('KD001','T1',1000,500,'12/7/2019')
INSERT INTO NHAP VALUES('KD002','T1',500,500,'12/7/2015')

INSERT INTO XUAT VALUES('HH101','B2',1000,2000,'3/24/2019')
INSERT INTO XUAT VALUES('NXB0X','C1',100,20000,'1/6/2019')
INSERT INTO XUAT VALUES('NXB01','C1',50,20000,'1/6/2015')
INSERT INTO XUAT VALUES('NXB02','T1',500,1000,'1/6/2015')

SELECT *FROM TON
SELECT *FROM NHAP
SELECT *FROM XUAT

--CAU2: thống kê tiền bán theo mã vật tư gồm MAVT, TENVT, TIEN BAN=(SOLGX*DONGIAX)
CREATE VIEW CAU2
AS
	SELECT TON.MAVT, TON.TENVT, SUM(SOLGX*DONGIAX) AS 'TONG TIEN BAN'
	FROM TON INNER JOIN XUAT ON TON.MAVT = XUAT.MAVT
	GROUP BY TON.MAVT, TON.TENVT
DROP VIEW CAU2
SELECT *FROM CAU2

--CAU3/4: thông kê SOLGX/SOLGN theo TENVT
CREATE VIEW CAU3
AS
	SELECT TON.TENVT,SUM(SOLGX/SOLG) AS 'TONG SO LUONG XUAT/NHAP'
	FROM TON INNER JOIN XUAT ON TON.MAVT = XUAT.MAVT
	GROUP BY TON.TENVT
DROP VIEW CAU3
SELECT *FROM CAU3

--CAU5: đưa ra tổng SOLG còn lại trong kho biết còn=nhập-xuất
CREATE VIEW CAU5
AS
	SELECT TON.MAVT, TON.TENVT, (SUM(SOLGN) - SUM(SOLGX) + SUM(SOLG)) AS 'TONG SO LUONG CON'
	FROM TON
		INNER JOIN NHAP ON TON.MAVT = NHAP.MAVT
		INNER JOIN XUAT ON TON.MAVT = XUAT.MAVT
GROUP BY TON.MAVT, TON.TENVT
DROP VIEW CAU5
SELECT *FROM CAU5

--CAU6: đưa ra TENVT có số lượng tồn max
CREATE VIEW CAU6
AS
	SELECT TENVT
	FROM TON
	WHERE SOLG = (SELECT MAX(SOLG) FROM TON)
DROP VIEW CAU6
SELECT *FROM CAU6

--CAU7: đưa ra các vật tư có tổng SOLGX > 100
CREATE VIEW CAU7
AS
	SELECT TON.MAVT, TON.TENVT
	FROM TON INNER JOIN XUAT ON TON.MAVT = XUAT.MAVT
	GROUP BY TON.MAVT, TON.TENVT
	HAVING SUM(SOLGX) > 100
DROP VIEW CAU7
SELECT *FROM CAU7

--CAU8: đưa ra tháng xuất, năm xuất, tổng SOLGX thông kê theo tháng và năm xuất
CREATE VIEW CAU8
AS
	SELECT MONTH(NGAYX) AS 'THANG XUAT', YEAR(NGAYX) AS 'NAM XUAT', SUM(SOLGX) AS 'TONG SO LUONG XUAT'
	FROM XUAT
	GROUP BY MONTH(NGAYX), YEAR(NGAYX)
DROP VIEW CAU8
SELECT *FROM CAU8

--CAU9: đưa ra MAVT, TENVT, SOLGN, SOLGX, DONGIAN, DONGIAX, NGAYN, NGAYX
CREATE VIEW CAU9
AS
	SELECT TON.MAVT, TENVT, SOLGN, SOLGX, DONGIAN, DONGIAX, NGAYN, NGAYX
	FROM TON INNER JOIN NHAP ON TON.MAVT = NHAP.MAVT
			 INNER JOIN XUAT ON TON.MAVT = XUAT.MAVT
DROP VIEW CAU9
SELECT *FROM CAU9

--CAU10: đưa ra MAVT, TENVT và tổng SOLG còn lại biêt SOLGN-SOLGX+SOLG=số lượng còn lại theo từng loại vật tư năm 2015
CREATE VIEW CAU10
AS
	SELECT TON.MAVT, TON.TENVT, (SUM(SOLGN) - SUM(SOLGX) + SUM(SOLG)) AS 'TONG SO LUONG CON TRONG KHO'
	FROM TON
		INNER JOIN NHAP ON TON.MAVT = NHAP.MAVT
		INNER JOIN XUAT ON TON.MAVT = XUAT.MAVT
	WHERE YEAR(NGAYN) = 2015 AND YEAR(NGAYX) = 2015
	GROUP BY TON.MAVT, TON.TENVT
DROP VIEW CAU10
SELECT *FROM CAU10