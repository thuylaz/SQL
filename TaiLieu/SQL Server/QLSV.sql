use master
go
create database QLSV
use QLSV 
go

create table LOP
(MALOP INT NOT NULL PRIMARY KEY IDENTITY(1,1),
TENLOP CHAR(20) NOT NULL,
PHONG INT NOT NULL
)

create table SinhVien
(MASV INT NOT NULL PRIMARY KEY IDENTITY(1,1),
TENSV CHAR(10) NOT NULL,
MALOP INT NOT NULL,
CONSTRAINT FK FOREIGN KEY(MALOP) REFERENCES LOP(MALOP)
)

INSERT INTO LOP
(TENLOP, PHONG)
VALUES	('CD', 1),
		('DH', 2),
		('LT', 2),
		('xy', 4);

INSERT INTO SinhVien
(TENSV, MALOP)
VALUES	('A', 1),
		('B', 2),
		('C', 1),
		('D', 3);

--CAU1
CREATE FUNCTION F_CAU1 (@MALOP INT)
RETURNS INT
AS
	BEGIN
		DECLARE @SOSV INT
		SELECT @SOSV = COUNT (*)
		FROM SinhVien
		WHERE MALOP = @MALOP
		RETURN @SOSV
	END
GO
DROP FUNCTION F_CAU1
SELECT dbo.F_CAU1(1) AS 'SO SINH VIEN'
SELECT dbo.F_CAU1(2) AS 'SO SINH VIEN'
SELECT dbo.F_CAU1(3) AS 'SO SINH VIEN'
SELECT dbo.F_CAU1(4) AS 'SO SINH VIEN'

--CAU2
CREATE FUNCTION F_CAU2 (@TENLOP CHAR(20))
RETURNS @DS TABLE
		(MASV INT,
		TENSV CHAR(10))
AS 
	BEGIN
		INSERT INTO @DS
			SELECT MASV, TENSV
			FROM SinhVien
			WHERE MALOP = (SELECT MALOP FROM LOP WHERE TENLOP = @TENLOP)
		RETURN
	END
GO
DROP FUNCTION F_CAU2
SELECT * FROM F_CAU2 ('CD')
SELECT * FROM F_CAU2 ('DH')
SELECT * FROM F_CAU2 ('LT')
SELECT * FROM F_CAU2 ('xy')

--CAU3
CREATE FUNCTION F_CAU3 (@TENLOP CHAR(20))
RETURNS @SV TABLE
		(MALOP INT,
		TENLOP CHAR(10),
		SOSV INT )

AS 
	BEGIN
		IF (EXISTS (SELECT * FROM LOP WHERE TENLOP = @TENLOP))
			BEGIN
				INSERT INTO @SV
					SELECT SinhVien.MALOP, TENLOP, COUNT (*)
					FROM LOP
					INNER JOIN SinhVien ON SinhVien.MALOP = LOP.MALOP 
					WHERE TENLOP = @TENLOP
					GROUP BY SinhVien.MALOP, TENLOP
			END
		ELSE 
			BEGIN
				INSERT INTO @SV
				SELECT SinhVien.MALOP, TENLOP, COUNT (*) 
				FROM LOP
				INNER JOIN SinhVien ON SinhVien.MALOP = LOP.MALOP 
				GROUP BY SinhVien.MALOP, TENLOP
			END
		RETURN
	END
GO
DROP FUNCTION F_CAU3
SELECT * FROM F_CAU3 ('AB')
SELECT * FROM F_CAU3 ('DH')

--CAU4
CREATE FUNCTION F_CAU4 (@TENSV CHAR(10))
RETURNS INT
AS
	BEGIN
		DECLARE @PHONG INT
		SELECT @PHONG = PHONG
		FROM LOP
		WHERE MALOP = (SELECT MALOP FROM SinhVien WHERE TENSV = @TENSV)
		RETURN @PHONG
	END
GO
DROP FUNCTION F_CAU4
SELECT dbo.F_CAU4('A') AS PHONG
SELECT dbo.F_CAU4('B') AS PHONG
SELECT dbo.F_CAU4('C') AS PHONG
SELECT dbo.F_CAU4('D') AS PHONG

--CAU5
CREATE FUNCTION F_CAU5 (@PHONG INT)
RETURNS @DS TABLE
		(MASV INT,
		TENSV CHAR(10),
		TENLOP CHAR(20) )
AS 
	BEGIN
		IF (EXISTS (SELECT * FROM LOP WHERE PHONG = @PHONG))
			BEGIN
				INSERT INTO @DS
					SELECT MASV, TENSV, TENLOP
					FROM LOP
					INNER JOIN SinhVien ON SinhVien.MALOP = LOP.MALOP 
					WHERE SinhVien.MALOP IN (SELECT MALOP FROM LOP WHERE PHONG = @PHONG)
			END
		ELSE 
			BEGIN
				INSERT INTO @DS
				SELECT MASV, TENSV, TENLOP
				FROM LOP
				INNER JOIN SinhVien ON SinhVien.MALOP = LOP.MALOP
			END
		RETURN
	END
GO
DROP FUNCTION F_CAU5
SELECT * FROM F_CAU5(1)
SELECT * FROM F_CAU5(3)

--CAU6
CREATE FUNCTION F_CAU6 (@PHONG INT)
RETURNS INT
AS
	BEGIN
		DECLARE @KQ INT
		IF (EXISTS (SELECT * FROM LOP WHERE PHONG = @PHONG))
			SELECT @KQ = COUNT(*)
			FROM LOP
			INNER JOIN SinhVien ON SinhVien.MALOP = LOP.MALOP
			WHERE PHONG = @PHONG
		ELSE
			SET @KQ = 0
		RETURN @KQ
	END
GO
DROP FUNCTION F_CAU6
SELECT dbo.F_CAU6(1) AS 'SO LOP'
SELECT dbo.F_CAU6(2) AS 'SO LOP'
SELECT dbo.F_CAU6(3) AS 'SO LOP'
SELECT dbo.F_CAU6(4) AS 'SO LOP'